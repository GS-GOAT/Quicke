name: Deploy Backend to Cloud Run

on:
  # triggers
  push:
    branches:
      - main
    paths:
      - 'apps/api-worker/**'
      - '.github/workflows/deploy-backend.yml' 

  workflow_dispatch:

# Env-vars
env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: asia-south1
  GCP_SERVICE_NAME: api-worker
  GCP_REPOSITORY_NAME: quicke-images

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    # WIF Permissions 
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          # full image tag def 
          IMAGE_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_REPOSITORY_NAME }}/${{ env.GCP_SERVICE_NAME }}:${{ github.sha }}"
          
          docker build -t $IMAGE_TAG -f apps/api-worker/Dockerfile .
          
          docker push $IMAGE_TAG
          
          # Exposes the image tag as an output for the next step
          echo "IMAGE_WITH_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.GCP_SERVICE_NAME }} \
            --image ${{ env.IMAGE_WITH_TAG }} \
            --platform managed \
            --region ${{ env.GAR_LOCATION }} \
            --port=8080 \
            --set-env-vars="NODE_ENV=production,VERCEL_FRONTEND_URL=https://quicke.in" \
            --set-secrets="DATABASE_URL=DATABASE_URL:latest,NEXTAUTH_SECRET=NEXTAUTH_SECRET:latest,SYSTEM_GEMINI_API_KEY=SYSTEM_GEMINI_API_KEY:latest"